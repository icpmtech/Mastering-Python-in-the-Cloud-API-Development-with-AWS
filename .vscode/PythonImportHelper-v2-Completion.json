[
    {
        "label": "math",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "math",
        "description": "math",
        "detail": "math",
        "documentation": {}
    },
    {
        "label": "csv",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "csv",
        "description": "csv",
        "detail": "csv",
        "documentation": {}
    },
    {
        "label": "HTTPException",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "DoesNotExist",
        "importPath": "tortoise.exceptions",
        "description": "tortoise.exceptions",
        "isExtraImport": true,
        "detail": "tortoise.exceptions",
        "documentation": {}
    },
    {
        "label": "IntegrityError",
        "importPath": "tortoise.exceptions",
        "description": "tortoise.exceptions",
        "isExtraImport": true,
        "detail": "tortoise.exceptions",
        "documentation": {}
    },
    {
        "label": "TemplateFiles",
        "importPath": "app.database.models",
        "description": "app.database.models",
        "isExtraImport": true,
        "detail": "app.database.models",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "ast",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "ast",
        "description": "ast",
        "detail": "ast",
        "documentation": {}
    },
    {
        "label": "manager_csv",
        "importPath": "manager_csv",
        "description": "manager_csv",
        "isExtraImport": true,
        "detail": "manager_csv",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "mymodule",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "mymodule",
        "description": "mymodule",
        "detail": "mymodule",
        "documentation": {}
    },
    {
        "label": "integer_var",
        "kind": 5,
        "importPath": "Hands-on Coding.Basic Syntax Exercises.data_types",
        "description": "Hands-on Coding.Basic Syntax Exercises.data_types",
        "peekOfCode": "integer_var = 10\nfloat_var = 20.5\nstring_var = \"Hello Python\"\nboolean_var = True\nprint(integer_var)\nprint(float_var)\nprint(string_var)\nprint(boolean_var)",
        "detail": "Hands-on Coding.Basic Syntax Exercises.data_types",
        "documentation": {}
    },
    {
        "label": "float_var",
        "kind": 5,
        "importPath": "Hands-on Coding.Basic Syntax Exercises.data_types",
        "description": "Hands-on Coding.Basic Syntax Exercises.data_types",
        "peekOfCode": "float_var = 20.5\nstring_var = \"Hello Python\"\nboolean_var = True\nprint(integer_var)\nprint(float_var)\nprint(string_var)\nprint(boolean_var)",
        "detail": "Hands-on Coding.Basic Syntax Exercises.data_types",
        "documentation": {}
    },
    {
        "label": "string_var",
        "kind": 5,
        "importPath": "Hands-on Coding.Basic Syntax Exercises.data_types",
        "description": "Hands-on Coding.Basic Syntax Exercises.data_types",
        "peekOfCode": "string_var = \"Hello Python\"\nboolean_var = True\nprint(integer_var)\nprint(float_var)\nprint(string_var)\nprint(boolean_var)",
        "detail": "Hands-on Coding.Basic Syntax Exercises.data_types",
        "documentation": {}
    },
    {
        "label": "boolean_var",
        "kind": 5,
        "importPath": "Hands-on Coding.Basic Syntax Exercises.data_types",
        "description": "Hands-on Coding.Basic Syntax Exercises.data_types",
        "peekOfCode": "boolean_var = True\nprint(integer_var)\nprint(float_var)\nprint(string_var)\nprint(boolean_var)",
        "detail": "Hands-on Coding.Basic Syntax Exercises.data_types",
        "documentation": {}
    },
    {
        "label": "number",
        "kind": 5,
        "importPath": "Hands-on Coding.Basic Syntax Exercises.control_structures",
        "description": "Hands-on Coding.Basic Syntax Exercises.control_structures",
        "peekOfCode": "number = 15\n# If-else statement\nif number % 2 == 0:\n    print(\"Even\")\nelse:\n    print(\"Odd\")\n# Loop (for example, a simple for loop)\nfor i in range(5):\n    print(i)",
        "detail": "Hands-on Coding.Basic Syntax Exercises.control_structures",
        "documentation": {}
    },
    {
        "label": "factorial",
        "kind": 2,
        "importPath": "Hands-on Coding.Function and Module Exercises.creating_functions",
        "description": "Hands-on Coding.Function and Module Exercises.creating_functions",
        "peekOfCode": "def factorial(n):\n    if n == 0 or n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\nprint(factorial(1))",
        "detail": "Hands-on Coding.Function and Module Exercises.creating_functions",
        "documentation": {}
    },
    {
        "label": "generate_csv",
        "kind": 2,
        "importPath": "Hands-on Coding.Hands-On-Projects-and-Case-Studies.Hands-On Projects.CSV-Workers.csv-manager",
        "description": "Hands-on Coding.Hands-On-Projects-and-Case-Studies.Hands-On Projects.CSV-Workers.csv-manager",
        "peekOfCode": "def generate_csv(template_result,filename):\n    template_result_dict = {key: str(value) for key, value in template_result.items()}\n    # Specify the CSV file name\n    csv_file =\"generated_templates\\\\\"+  filename + \".csv\"\n    # Open the CSV file in write mode\n    with open(csv_file, 'w', newline='') as file:\n        # Create a CSV writer object\n        writer = csv.writer(file)\n        # Write the header row\n        header = list(template_result_dict.keys())",
        "detail": "Hands-on Coding.Hands-On-Projects-and-Case-Studies.Hands-On Projects.CSV-Workers.csv-manager",
        "documentation": {}
    },
    {
        "label": "a",
        "kind": 5,
        "importPath": "operators",
        "description": "operators",
        "peekOfCode": "a = 10\nb = 3\nsum = a + b    # 13\ndifference = a - b # 7\nproduct = a * b # 30\nquotient = a / b # 3.3333",
        "detail": "operators",
        "documentation": {}
    },
    {
        "label": "b",
        "kind": 5,
        "importPath": "operators",
        "description": "operators",
        "peekOfCode": "b = 3\nsum = a + b    # 13\ndifference = a - b # 7\nproduct = a * b # 30\nquotient = a / b # 3.3333",
        "detail": "operators",
        "documentation": {}
    },
    {
        "label": "sum",
        "kind": 5,
        "importPath": "operators",
        "description": "operators",
        "peekOfCode": "sum = a + b    # 13\ndifference = a - b # 7\nproduct = a * b # 30\nquotient = a / b # 3.3333",
        "detail": "operators",
        "documentation": {}
    },
    {
        "label": "difference",
        "kind": 5,
        "importPath": "operators",
        "description": "operators",
        "peekOfCode": "difference = a - b # 7\nproduct = a * b # 30\nquotient = a / b # 3.3333",
        "detail": "operators",
        "documentation": {}
    },
    {
        "label": "product",
        "kind": 5,
        "importPath": "operators",
        "description": "operators",
        "peekOfCode": "product = a * b # 30\nquotient = a / b # 3.3333",
        "detail": "operators",
        "documentation": {}
    },
    {
        "label": "quotient",
        "kind": 5,
        "importPath": "operators",
        "description": "operators",
        "peekOfCode": "quotient = a / b # 3.3333",
        "detail": "operators",
        "documentation": {}
    },
    {
        "label": "greet",
        "kind": 2,
        "importPath": "variables_datatype",
        "description": "variables_datatype",
        "peekOfCode": "def greet(name):\n    return \"Hello, \" + name + \"!\"\nprint(greet(\"Alice\"))  # Output: Hello, Alice!\npython\n# Assuming we have a module named 'mymodule.py' with a function called 'greet'\nimport mymodule\nmymodule.greet(\"Bob\")  # Accessing the greet function from mymodule",
        "detail": "variables_datatype",
        "documentation": {}
    },
    {
        "label": "name",
        "kind": 5,
        "importPath": "variables_datatype",
        "description": "variables_datatype",
        "peekOfCode": "name = \"Alice\"  # String\nage = 30        # Integer\nheight = 5.5    # Float\nis_student = True # Boolean\npython\n# This is a single-line comment in Python\n\"\"\"\nThis is a multi-line comment\nor docstring used to describe more complex code\n\"\"\"",
        "detail": "variables_datatype",
        "documentation": {}
    },
    {
        "label": "age",
        "kind": 5,
        "importPath": "variables_datatype",
        "description": "variables_datatype",
        "peekOfCode": "age = 30        # Integer\nheight = 5.5    # Float\nis_student = True # Boolean\npython\n# This is a single-line comment in Python\n\"\"\"\nThis is a multi-line comment\nor docstring used to describe more complex code\n\"\"\"\npython",
        "detail": "variables_datatype",
        "documentation": {}
    },
    {
        "label": "height",
        "kind": 5,
        "importPath": "variables_datatype",
        "description": "variables_datatype",
        "peekOfCode": "height = 5.5    # Float\nis_student = True # Boolean\npython\n# This is a single-line comment in Python\n\"\"\"\nThis is a multi-line comment\nor docstring used to describe more complex code\n\"\"\"\npython\n# Example of if-else statement",
        "detail": "variables_datatype",
        "documentation": {}
    },
    {
        "label": "is_student",
        "kind": 5,
        "importPath": "variables_datatype",
        "description": "variables_datatype",
        "peekOfCode": "is_student = True # Boolean\npython\n# This is a single-line comment in Python\n\"\"\"\nThis is a multi-line comment\nor docstring used to describe more complex code\n\"\"\"\npython\n# Example of if-else statement\nage = 20",
        "detail": "variables_datatype",
        "documentation": {}
    },
    {
        "label": "age",
        "kind": 5,
        "importPath": "variables_datatype",
        "description": "variables_datatype",
        "peekOfCode": "age = 20\nif age >= 18:\n    print(\"Adult\")\nelse:\n    print(\"Minor\")\npython\n# Example of a for loop\nfor i in range(5):\n    print(i)  # prints numbers 0 to 4\n# Example of a while loop",
        "detail": "variables_datatype",
        "documentation": {}
    },
    {
        "label": "count",
        "kind": 5,
        "importPath": "variables_datatype",
        "description": "variables_datatype",
        "peekOfCode": "count = 0\nwhile count < 5:\n    print(count)\n    count += 1  # same as count = count + 1\npython\n# Defining a simple function\ndef greet(name):\n    return \"Hello, \" + name + \"!\"\nprint(greet(\"Alice\"))  # Output: Hello, Alice!\npython",
        "detail": "variables_datatype",
        "documentation": {}
    }
]